
;------------------------------------------------------------------------------
; 'Ping' for HeroHomingBeacon. Acts like an ring carrier until just before 
; the fortress walls

Object HeroHomingBeacon_SEE

  EvaEnemyObjectSightedEvent = None  ; Not a real unit
  
	; Draw = W3DScriptedModelDraw SpecialAnimStateFX
    ; DefaultModelConditionState
      ; Model = Icon
    ; End
	; End
  
	ArmorSet
		Conditions      = None
		Armor           = PingArmor
		DamageFX        = NormalDamageFX
	End

  ; ***DESIGN parameters ***
  EditorSorting   = SYSTEM
  KindOf = NO_COLLIDE CREEP IGNORE_FOR_VICTORY IGNORE_FOR_EVA_SPEECH_POSITION UNATTACKABLE NOT_AUTOACQUIRABLE ;INERT
	ThreatLevel			= 0.0
	VisionRange		= 0
	ShroudClearingRange	= 0

  ; *** ENGINEERING Parameters ***
	Body = ActiveBody ModuleTag_Body ;Can take damage, but won't die.  Can only die from ::kill() or other unresistable damage
		MaxHealth      = 1.0
	End

	; Behavior = SlowDeathBehavior ModuleTag_HatchProcess
		; DestructionDelay	= 10							; this is in miliseconds
		; OCL					= FINAL OCL_TheHeroHomingBeaconDud_SEE
		// Weapon				= FINAL KillTheRingStealerWeapon_SEE
		// FX					= INITIAL FX_AnnounceGollumStoleRing_SEE
	; End

	Behavior = DestroyDie ModuleTag_Die
	End
	
	Behavior = LifetimeUpdate ModuleTag_HatchTrigger
		MinLifetime = 60000.0
		MaxLifetime = 120000.0
	End
  
	Behavior = AttachUpdate ModuleTag_Attach
		ObjectFilter = ANY +HERO +DwarvenBattleWagon NOT_FLYING_UNITS
		ScanRange = 20
		ParentStatus = HOLDING_THE_RING
		AlwaysTeleport = No
		AnchorToTopOfGeometry = Yes
	End
  
	Behavior = AIUpdateInterface	ModuleTag_AIUpdateInterface
		AutoAcquireEnemiesWhenIdle = No
		// MoodAttackCheckRate        = 500
	End
  
	LocomotorSet
		Locomotor = InvisiblePingLocomotor_SEE
		Condition = SET_NORMAL 
		Speed     = 1000
	End

	Behavior = SlavedUpdate ModuleTag_Slave
		UseSlaverAsControlForEvaObjectSightedEvents = Yes
		DieOnMastersDeath	= Yes	//Die when my master dies!
		; GuardPositionOffset	= X:0 Y:0 Z:5
    ; GuardMaxRange = 10      ;How far away from master I'm allowed when master is idle (doesn't wander)
    ; GuardWanderRange = 10   ;How far away I'm allowed to wander from master while guarding.
    ; ScoutRange = 10         ;How far away from master I'm allowed when master is moving.
    ; ScoutWanderRange = 0   ;How far I'm allowed to wander from scout point.
	End
  
End
